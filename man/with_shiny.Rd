% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/googleAuthR_utility.R
\name{with_shiny}
\alias{with_shiny}
\title{Turn a googleAuthR data fetch function into a Shiny compatible one}
\usage{
with_shiny(f, shiny_access_token = NULL)
}
\arguments{
\item{f}{A function generated by \code{googleAuth_fetch_generator}}

\item{shiny_access_token}{A token generated within a \code{gar_shiny_getToken}}
}
\value{
the function f with an extra parameter, shiny_access_token=NULL
}
\description{
Turn a googleAuthR data fetch function into a Shiny compatible one
}
\examples{
\dontrun{
shinyServer(function(input, output, session)){

  AuthCode <- reactive({

      authReturnCode(session, securityCode)

  })

  output$AuthGAURL <- renderUI({

       a("Click Here to Authorise Your Google Analytics Access",
          href=shinygaGetTokenURL(securityCode)
          )
       })

  AccessToken <- reactive({
      validate(
        need(AuthCode(), "Authenticate To See")
      )

      access_token <- shinygaGetToken(code = AuthCode())

      token <- access_token$access_token

    })

    websites <- reactive({

      list_websites_shiny <- with_shiny(list_websites)

      list_websites_shiny(shiny_access_token = AccessToken())

    })

}
}
}

