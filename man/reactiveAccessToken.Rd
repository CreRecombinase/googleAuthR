% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/googleAuthR_shiny.R
\name{reactiveAccessToken}
\alias{reactiveAccessToken}
\title{Create a reactive Google OAuth2 token}
\usage{
reactiveAccessToken(session)
}
\arguments{
\item{session}{A Shiny session object.}
}
\value{
A reactive Google auth token
}
\description{
Use within a Shiny server.R session to create the access token passed
  to all Google API functions using \code{with_shiny}
}
\examples{
\dontrun{
## in server.R
shinyServer(function(input, output, session)){

  ## Get auth code from return URL
  access_token  <- reactiveAccessToken(session)

  ## Make a loginButton to display using loginOutput
  output$loginButton <- renderLogin(session, access_token())

  output$websites <- renderTable({

    ## using with_shiny adds a shiny_access_token parameter to pass access_token()
    list_websites <- with_shiny(list_websites,
                                access_token())

    })

}

## in ui.R
shinyUI(fluidPage(
  loginOutput("loginButton"),
  renderTable("websites)
  ))
}
}
\seealso{
Other shiny auth functions: \code{\link{authReturnCode}};
  \code{\link{createCode}};
  \code{\link{gar_shiny_getAuthUrl}};
  \code{\link{gar_shiny_getToken}};
  \code{\link{gar_shiny_getUrl}};
  \code{\link{loginOutput}}; \code{\link{renderLogin}};
  \code{\link{with_shiny}}
}

